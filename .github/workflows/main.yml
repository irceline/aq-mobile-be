name: CI/CD Workflow

on:
  push:
    branches:
      - pipeline/github-actions

jobs:
  # prepare-environment:
  #   name: Preparing environment
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Decode and save files
  #       run: |
  #         echo "${{ secrets.GOOGLE_SVC_JSON }}" | base64 -d > ${{ github.workspace }}/android/app/google-services.json
  #         echo "${{ secrets.GOOGLE_SVC_PLIST }}" | base64 -d > ${{ github.workspace }}/ios/App/App/GoogleService-Info.plist
  #         echo "${{ secrets.SVC_ACCOUNT }}" | base64 -d > ${{ github.workspace }}/pc-api-8152115809467011764-994-c96c4f0b05ff.json
  #         echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > ${{ github.workspace }}/belair.keystore
  #     - name: Archive production artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: dist-without-markdown
  #         path: |
  #           ${{ github.workspace }}/android/app/google-services.json
  #           ${{ github.workspace }}/ios/App/App/GoogleService-Info.plist
  #           ${{ github.workspace }}/pc-api-8152115809467011764-994-c96c4f0b05ff.json
  #           ${{ github.workspace }}/belair.keystore

  # build-deploy-android:
  #   name: Build Android & deploy to PlayStore
  #   # needs: prepare-environment
  #   runs-on: ubuntu-latest
  #   container:
  #     image: opunbuds/ionic-capacitor-android-simple-build-box:node-hydrogen
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Build and deploy
  #       run: |
  #         echo "${{ secrets.GOOGLE_SVC_JSON }}" | base64 -d > android/app/google-services.json
  #         echo "${{ secrets.SVC_ACCOUNT }}" | base64 -d > pc-api-8152115809467011764-994-c96c4f0b05ff.json
  #         echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > belair.keystore
  #         npm i
  #         export APP_VERSION=$(./tools/version-android.sh)
  #         echo "Version $APP_VERSION, Build Number $GITHUB_RUN_NUMBER"
  #         npx capacitor-set-version set:android -v $APP_VERSION -b $GITHUB_RUN_NUMBER
  #         ionic cap sync android --prod && cd android && ./gradlew bundle
  #         cd .. && jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore belair.keystore android/app/build/outputs/bundle/release/app-release.aab ${{ secrets.KEYSTORE_ALIAS }} -storepass ${{ secrets.KEYSTORE_PASSWORD }}
  #         cd android && fastlane deploy branch:${{ github.ref_name }}

  build-deploy-ios:
    name: Build iOS & deploy to AppStore
    # needs: prepare-environment
    runs-on: marvin
    steps:
      - uses: actions/checkout@v2
      - name: Build and deploy
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_REPO_PASSWORD: ${{ secrets.MATCH_REPO_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          echo "${{ secrets.GOOGLE_SVC_PLIST }}" | base64 -d > ios/App/App/GoogleService-Info.plist
          export NVM_DIR="$HOME/.nvm"
          source $(brew --prefix nvm)/nvm.sh
          nvm use
          npm install -g @ionic/cli
          npm install -g @capacitor/cli
          npm i
          export APP_VERSION=$(./tools/version-ios.sh)
          echo "Version $APP_VERSION, Build Number $GITHUB_RUN_NUMBER"
          npx capacitor-set-version set:ios -v $APP_VERSION -b $GITHUB_RUN_NUMBER
          ionic cap sync ios --prod
          cd ios/App && fastlane beta

  # post-deployment:
  #   name: Post deployment
  #   needs: [build-deploy-android, build-deploy-ios]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Completion message
  #       run: echo "Production deployment was successful"
